{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aijamal\\\\Documents\\\\GitHub\\\\stardb-react\\\\src\\\\components\\\\item-details\\\\item-details.js\";\nimport React, { Component } from 'react';\nimport './item-details.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Record = ({\n  label,\n  fieldName,\n  item\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"list-group-item\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"term\",\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: item[fieldName]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Record;\n\nclass ItemDetails extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      item: {}\n    };\n  }\n\n  componentDidMount() {\n    const id = this.props.selectedItemId;\n    this.props.getData(id).then(data => this.setState({\n      item: data\n    }));\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.selectedItemId !== this.props.selectedItemId) {\n      const id = this.props.selectedItemId;\n      this.props.getData(id).then(data => this.setState({\n        item: data\n      }));\n    }\n  }\n\n  render() {\n    const {\n      id,\n      name,\n      gender,\n      birthYear,\n      eyeColor\n    } = this.state.item;\n    const image_url = this.props.getImage({\n      id: id\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"person-details card\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"person-image\",\n        src: image_url\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-group list-group-flush\",\n          children: React.Children.map(this.props.children, item => {\n            const newElement = /*#__PURE__*/React.cloneElement(item, {\n              item: this.state.item\n            });\n            return newElement;\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport { Record, ItemDetails };\n\nvar _c;\n\n$RefreshReg$(_c, \"Record\");","map":{"version":3,"sources":["C:/Users/Aijamal/Documents/GitHub/stardb-react/src/components/item-details/item-details.js"],"names":["React","Component","Record","label","fieldName","item","ItemDetails","state","componentDidMount","id","props","selectedItemId","getData","then","data","setState","componentDidUpdate","prevProps","render","name","gender","birthYear","eyeColor","image_url","getImage","Children","map","children","newElement","cloneElement"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,oBAAP;;;AAGA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA,SAAR;AAAmBC,EAAAA;AAAnB,CAAD,KAA8B;AAC3C,sBACE;AAAI,IAAA,SAAS,EAAC,iBAAd;AAAA,4BACE;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAA,gBAAwBF;AAAxB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAOE,IAAI,CAACD,SAAD;AAAX;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAPD;;KAAMF,M;;AAUN,MAAMI,WAAN,SAA0BL,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAClCM,KADkC,GAC1B;AACNF,MAAAA,IAAI,EAAE;AADA,KAD0B;AAAA;;AAKlCG,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,EAAE,GAAG,KAAKC,KAAL,CAAWC,cAAtB;AACA,SAAKD,KAAL,CAAWE,OAAX,CAAmBH,EAAnB,EAAuBI,IAAvB,CAA4BC,IAAI,IAAI,KAAKC,QAAL,CAAc;AAACV,MAAAA,IAAI,EAAES;AAAP,KAAd,CAApC;AACD;;AAEDE,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC5B,QAAIA,SAAS,CAACN,cAAV,KAA6B,KAAKD,KAAL,CAAWC,cAA5C,EAA4D;AAC1D,YAAMF,EAAE,GAAG,KAAKC,KAAL,CAAWC,cAAtB;AACA,WAAKD,KAAL,CAAWE,OAAX,CAAmBH,EAAnB,EAAuBI,IAAvB,CAA4BC,IAAI,IAAI,KAAKC,QAAL,CAAc;AAACV,QAAAA,IAAI,EAAES;AAAP,OAAd,CAApC;AACD;AACF;;AAEDI,EAAAA,MAAM,GAAG;AACP,UAAM;AAACT,MAAAA,EAAD;AAAKU,MAAAA,IAAL;AAAWC,MAAAA,MAAX;AAAmBC,MAAAA,SAAnB;AAA8BC,MAAAA;AAA9B,QAA0C,KAAKf,KAAL,CAAWF,IAA3D;AACA,UAAMkB,SAAS,GAAG,KAAKb,KAAL,CAAWc,QAAX,CAAoB;AAACf,MAAAA,EAAE,EAAEA;AAAL,KAApB,CAAlB;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,cAAf;AACE,QAAA,GAAG,EAAEc;AADP;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE;AAAA,oBAAKJ;AAAL;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAI,UAAA,SAAS,EAAC,6BAAd;AAAA,oBAEGnB,KAAK,CAACyB,QAAN,CAAeC,GAAf,CAAmB,KAAKhB,KAAL,CAAWiB,QAA9B,EAAyCtB,IAAD,IAAU;AAC7C,kBAAMuB,UAAU,gBAAG5B,KAAK,CAAC6B,YAAN,CAAmBxB,IAAnB,EAAyB;AAACA,cAAAA,IAAI,EAAE,KAAKE,KAAL,CAAWF;AAAlB,aAAzB,CAAnB;AACA,mBAAOuB,UAAP;AACD,WAHJ;AAFH;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAoBD;;AAzCiC;;AA4CpC,SAAQ1B,MAAR,EAAgBI,WAAhB","sourcesContent":["import React, { Component } from 'react';\nimport './item-details.css';\n\n\nconst Record = ({label, fieldName, item}) => {\n  return (\n    <li className=\"list-group-item\">\n      <span className=\"term\">{label}</span>\n      <span>{item[fieldName]}</span>\n    </li>\n  )\n}\n\n\nclass ItemDetails extends Component {\n  state = {\n    item: {}\n  }\n\n  componentDidMount() {\n    const id = this.props.selectedItemId\n    this.props.getData(id).then(data => this.setState({item: data}))\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.selectedItemId !== this.props.selectedItemId) {\n      const id = this.props.selectedItemId\n      this.props.getData(id).then(data => this.setState({item: data}))\n    }\n  }\n\n  render() {\n    const {id, name, gender, birthYear, eyeColor} = this.state.item\n    const image_url = this.props.getImage({id: id})\n\n    return (\n      <div className=\"person-details card\">\n        <img className=\"person-image\"\n          src={image_url} />\n\n        <div className=\"card-body\">\n          <h4>{name}</h4>\n          <ul className=\"list-group list-group-flush\">\n\n            {React.Children.map(this.props.children, (item) => {\n                  const newElement = React.cloneElement(item, {item: this.state.item})\n                  return newElement;\n                }\n              )\n            }\n\n          </ul>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport {Record, ItemDetails}\n"]},"metadata":{},"sourceType":"module"}