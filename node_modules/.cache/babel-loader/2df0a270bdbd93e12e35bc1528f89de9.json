{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aijamal\\\\Documents\\\\GitHub\\\\stardb-react\\\\src\\\\components\\\\random-planet\\\\random-planet.js\";\nimport React, { Component } from 'react';\nimport SwapiService from '../../services/swapi-service';\nimport Spinner from '../spinner';\nimport ErrorIndicator from '../error-indicator';\nimport './random-planet.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class RandomPlanet extends Component {\n  constructor(...args) {\n    super(...args);\n    this.swapi = new SwapiService();\n    this.state = {\n      planet: {},\n      load: true,\n      error: false\n    };\n\n    this.updatePlanet = () => {\n      const id = Math.floor(Math.random() * (15 - 1)) + 1;\n      this.swapi.getPlanet(id).then(data => {\n        this.setState({\n          planet: data,\n          load: false\n        });\n      }).catch(err => {\n        this.setState({\n          load: false,\n          error: true\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.updatePlanet();\n    this.intervat = setInterval(this.updatePlanet, 4000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.intervat);\n  }\n\n  render() {\n    const {\n      id,\n      name,\n      population,\n      rotationPeriod,\n      diameter\n    } = this.state.planet;\n    const url = `https://starwars-visualguide.com/assets/img/planets/${id}.jpg`;\n\n    if (this.state.load) {\n      return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 14\n      }, this);\n    }\n\n    if (this.state.error) {\n      return /*#__PURE__*/_jsxDEV(ErrorIndicator, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"random-planet jumbotron rounded\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"planet-image\",\n        src: \"url\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-group list-group-flush\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"list-group-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"term\",\n              children: \"Population\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: population\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"list-group-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"term\",\n              children: \"Rotation Period\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: rotationPeriod\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"list-group-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"term\",\n              children: \"Diameter\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: diameter\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Aijamal/Documents/GitHub/stardb-react/src/components/random-planet/random-planet.js"],"names":["React","Component","SwapiService","Spinner","ErrorIndicator","RandomPlanet","swapi","state","planet","load","error","updatePlanet","id","Math","floor","random","getPlanet","then","data","setState","catch","err","componentDidMount","intervat","setInterval","componentWillUnmount","clearInterval","render","name","population","rotationPeriod","diameter","url"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport SwapiService from '../../services/swapi-service';\r\nimport Spinner from '../spinner'\r\nimport ErrorIndicator from '../error-indicator'\r\n\r\nimport './random-planet.css';\r\n\r\n\r\nexport default class RandomPlanet extends Component {\r\n  swapi = new SwapiService()\r\n\r\n  state = {\r\n      planet: {},\r\n      load: true,\r\n      error: false,\r\n  }\r\n\r\n  updatePlanet = () => {\r\n    const id = Math.floor(Math.random() * (15 - 1)) + 1;\r\n\r\n    this.swapi.getPlanet(id).then((data) => {\r\n      this.setState({\r\n        planet: data,\r\n        load: false,\r\n      })\r\n    }).catch((err) => {\r\n      this.setState({\r\n        load: false,\r\n        error: true,\r\n      })\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.updatePlanet()\r\n    this.intervat = setInterval(this.updatePlanet, 4000)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n      clearInterval(this.intervat)\r\n  }\r\n\r\n  render() {\r\n    const {id, name, population, rotationPeriod, diameter} = this.state.planet;\r\n    const url = `https://starwars-visualguide.com/assets/img/planets/${id}.jpg`\r\n\r\n    if (this.state.load) {\r\n      return <Spinner />\r\n    }\r\n\r\n    if (this.state.error) {\r\n      return <ErrorIndicator />\r\n    }\r\n\r\n    return (\r\n      <div className=\"random-planet jumbotron rounded\">\r\n        <img className=\"planet-image\"\r\n             src='url' />\r\n        <div>\r\n          <h4>{name}</h4>\r\n          <ul className=\"list-group list-group-flush\">\r\n            <li className=\"list-group-item\">\r\n              <span className=\"term\">Population</span>\r\n              <span>{population}</span>\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n              <span className=\"term\">Rotation Period</span>\r\n              <span>{rotationPeriod}</span>\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n              <span className=\"term\">Diameter</span>\r\n              <span>{diameter}</span>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}